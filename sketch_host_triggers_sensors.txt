/*
Project:   DHT11 und DHT22 Temperatur und Luftfeuchte Sensor
Author:    Klaus-D. Dittmer mit Hilfe von Co-Pilot
Date:      Created 03.01.2025
Version:   V3.2; Host (PC/LT)triggert Ausgabe mehrerer Sensoren (Duplex Betrieb)
IDE:       Arduino IDE 2.3.4 via Windows

Required Board (Tools -> Board -> Boards Manager...)
  - Board: Arduino UNO

Required libraries (sketch -> include library -> manage libraries)
 - Adafruit_BMP280_Library-master V2.6.8
 - Adafruit_BusIO V1.16.2
 - Adafruit_DHT sensor library V1.4.6
 - Adafruit Unified Sensor Library V1.1.14
 - DHT sensor library
 - Backup Arduino Library DHT kxn (ggf. nicht erforderlich)


Wirering for the BMP280/DHT11/DHT22Sensors:
BMP280	MEGA DHT11 PIN   MEGA    DHT22   PIN   MEGA   
VIN     5.0V VCC   mid    5.0V    VCC    left  5.0V    
GND     GND  GND   right  GND     GND    right GND   
SCL     A5   OUT   left   D7      OUT    mid   D8    
SDA     A4
*/
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <DHT_U.h>

#define DHTPIN1 7            // Pin für den ersten Sensor
#define DHTPIN2 8            // Pin für den zweiten Sensor
const int raum_id1 = 111; // Wert für raum_id des ersten Sensors (111 für DHT11)
const int raum_id2 = 222; // Wert für raum_id des "zweiten" Sensors (222 für DHT22)

DHT_Unified dht1(DHTPIN1, DHT11);
DHT_Unified dht2(DHTPIN2, DHT22);

void setup() {
  Serial.begin(115200);
  dht1.begin();
  dht2.begin();
}

void loop() {
  if (Serial.available() > 0) {
    String command = Serial.readStringUntil('\n');
    if (command == "GET_DHT111") {
      sensors_event_t tempEvent, humEvent;

      // Temperatur und Luftfeuchtigkeit des ersten Sensors messen
      dht1.temperature().getEvent(&tempEvent);
      dht1.humidity().getEvent(&humEvent);

      if (!isnan(tempEvent.temperature) && !isnan(humEvent.relative_humidity)) {
        // Wenn beide Werte gültig sind, ausgeben
        Serial.print("Raum: ");
        Serial.print(raum_id1);
        Serial.print("; Temperatur: ");
        Serial.print(tempEvent.temperature);
        Serial.print("; Feuchte: ");
        Serial.println(humEvent.relative_humidity);
      } else {
        // Wenn einer der Werte ungültig ist, Fehlermeldung ausgeben
        Serial.print("Raum: ");
        Serial.print(raum_id1);
        Serial.println("; Fehler beim Lesen der Sensorwerte!");
      }
    } else if (command == "GET_DHT22") {
      sensors_event_t tempEvent, humEvent;

      // Temperatur und Luftfeuchtigkeit des zweiten Sensors messen
      dht2.temperature().getEvent(&tempEvent);
      dht2.humidity().getEvent(&humEvent);

      if (!isnan(tempEvent.temperature) && !isnan(humEvent.relative_humidity)) {
        // Wenn beide Werte gültig sind, ausgeben
        Serial.print("Raum: ");
        Serial.print(raum_id2);
        Serial.print("; Temperatur: ");
        Serial.print(tempEvent.temperature);
        Serial.print("; Feuchte: ");
        Serial.println(humEvent.relative_humidity);
      } else {
        // Wenn einer der Werte ungültig ist, Fehlermeldung ausgeben
        Serial.print("Raum: ");
        Serial.print(raum_id2);
        Serial.println("; Fehler beim Lesen der Sensorwerte!");
      }
    } else if (command == "GET_DHT11_DHT22") {
      sensors_event_t tempEvent1, humEvent1, tempEvent2, humEvent2;

      // Temperatur und Luftfeuchtigkeit des ersten Sensors messen
      dht1.temperature().getEvent(&tempEvent1);
      dht1.humidity().getEvent(&humEvent1);

      // Temperatur und Luftfeuchtigkeit des zweiten Sensors messen
      dht2.temperature().getEvent(&tempEvent2);
      dht2.humidity().getEvent(&humEvent2);

      if (!isnan(tempEvent1.temperature) && !isnan(humEvent1.relative_humidity){
        // Wenn alle Werte gültig sind, ausgeben
        Serial.print("Raum1: ");
        Serial.print(raum_id1);
        Serial.print("; Temperatur: ");
        Serial.print(tempEvent1.temperature);
        Serial.print("; Feuchte: ");
        Serial.println(humEvent1.relative_humidity);
      } else {
        // Wenn einer der Werte ungültig ist, Fehlermeldung ausgeben
        Serial.println("Fehler beim Lesen der Sensorwerte!");
      }
     if (!isnan(tempEvent2.temperature) && !isnan(humEvent2.relative_humidity){
        Serial.print("Raum2: ");
        Serial.print(raum_id2);
        Serial.print("; Temperatur: ");
        Serial.print(tempEvent2.temperature);
        Serial.print("; Feuchte: ");
        Serial.println(humEvent2.relative_humidity);
      } else {
        // Wenn einer der Werte ungültig ist, Fehlermeldung ausgeben
        Serial.println("Fehler beim Lesen der Sensorwerte!");
      }
    }
  }
}

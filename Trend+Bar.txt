#include DHT.h
#include DHT_U.h
#include Adafruit_Sensor.h
#include Wire.h

#define DHTPIN5 7             Pin für den Sensor DHT11
#define DHTPIN6 8             Pin für den Sensor DHT22

const int sensor_id5 = 5;  Sensornummer für DHT22 in Raum 322
const int sensor_id6 = 6;  Sensornummer für DHTXX in Raum 4XX

DHT_Unified dht5(DHTPIN5, DHT22);
DHT_Unified dht6(DHTPIN6, DHT22);

void setup() {
  Serial.begin(115200);
  dht5.begin();
  dht6.begin();
  Wire.begin();
}

void loop() {
  if (Serial.available()  0) {
    String command = Serial.readStringUntil('n');
    if (command == GET_ID5) {
      sensors_event_t tempEvent, humEvent;

       Temperatur und Luftfeuchtigkeit des ersten Sensors messen
      dht5.temperature().getEvent(&tempEvent);
      dht5.humidity().getEvent(&humEvent);

      if (!isnan(tempEvent.temperature) && !isnan(humEvent.relative_humidity)) {
         Wenn beide Werte gültig sind, ausgeben
        Serial.print(Sensor );
        Serial.print(sensor_id5);
        Serial.print(; Temperatur );
        Serial.print(tempEvent.temperature);
        Serial.print(; Feuchte );
        Serial.println(humEvent.relative_humidity);
      } else {
         Wenn einer der Werte ungültig ist, Fehlermeldung ausgeben
        Serial.print(Sensor );
        Serial.print(sensor_id5);
        Serial.println(; Fehler beim Lesen der Sensorwerte!);
      }
    } else if (command == GET_ID6) {
      sensors_event_t tempEvent, humEvent;

       Temperatur und Luftfeuchtigkeit des zweiten Sensors messen
      dht6.temperature().getEvent(&tempEvent);
      dht6.humidity().getEvent(&humEvent);

      if (!isnan(tempEvent.temperature) && !isnan(humEvent.relative_humidity)) {
         Wenn beide Werte gültig sind, ausgeben
        Serial.print(Sensor );
        Serial.print(sensor_id6);
        Serial.print(; Temperatur );
        Serial.print(tempEvent.temperature);
        Serial.print(; Feuchte );
        Serial.println(humEvent.relative_humidity);
      } else {
         Wenn einer der Werte ungültig ist, Fehlermeldung ausgeben
        Serial.print(Sensor );
        Serial.print(sensor_id6);
        Serial.println(; Fehler beim Lesen der Sensorwerte!);
      }

    } else if (command == GET_ALL) {
      sensors_event_t tempEvent5, humEvent5, tempEvent6, humEvent6;

       Temperatur und Luftfeuchtigkeit des ersten Sensors messen
      dht5.temperature().getEvent(&tempEvent5);
      dht5.humidity().getEvent(&humEvent5);

       Temperatur und Luftfeuchtigkeit des zweiten Sensors messen
      dht6.temperature().getEvent(&tempEvent6);
      dht6.humidity().getEvent(&humEvent6);

      if (!isnan(tempEvent5.temperature) && !isnan(humEvent5.relative_humidity)) {
         Wenn alle Werte gültig sind, ausgeben
        Serial.print(Sensor );
        Serial.print(sensor_id5);
        Serial.print(; Temperatur );
        Serial.print(tempEvent5.temperature);
        Serial.print(; Feuchte );
        Serial.println(humEvent5.relative_humidity);
      } else {
         Wenn einer der Werte ungültig ist, Fehlermeldung ausgeben
        Serial.print(Sensor );
        Serial.print(sensor_id5);
        Serial.println(; Fehler beim Lesen der Sensorwerte!);
      }

      if (!isnan(tempEvent6.temperature) && !isnan(humEvent6.relative_humidity)) {
        Serial.print(Sensor );
        Serial.print(sensor_id6);
        Serial.print(; Temperatur );
        Serial.print(tempEvent6.temperature);
        Serial.print(; Feuchte );
        Serial.println(humEvent6.relative_humidity);
      } else {
         Wenn einer der Werte ungültig ist, Fehlermeldung ausgeben
        Serial.print(Sensor );
        Serial.print(sensor_id6);
        Serial.println(; Fehler beim Lesen der Sensorwerte!);
      }
    } else if (command.startsWith(SET_BAR)) {
      int barIndex = command.charAt(7) - '0';  Extrahiere die Bar-Nummer (1-4)
      String valueStr = command.substring(9);
      int value = (int) strtol(valueStr.c_str(), NULL, 16);
      setLEDBar(barIndex, value);
    }
  }
}

void setLEDBar(int barIndex, int value) {
  int address = 0x20 + (barIndex - 1);  Berechne die I2C-Adresse basierend auf der Bar-Nummer
  Wire.beginTransmission(address);
  Wire.write(value);
  Wire.endTransmission();
}
